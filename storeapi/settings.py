"""
Django settings for storeapi project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
import datetime
from django.conf import settings


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&d@5%dh+bo4-c(&6#u7-bkc-j0d=yj_ptf3!(wf^c!j%i(vrr_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['192.211.99.29', 'localhost', '127.0.0.1']

AUTH_USER_MODEL = "authentication.User"
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # modular apps
    'rest_framework',
    'rest_framework_simplejwt.token_blacklist',
    'location_field.apps.DefaultConfig',
    'corsheaders',
    'drf_yasg',
    'authentication',

    # my apps
    'booking',
    'payment',
    'store',

]
SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    }
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'storeapi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'storeapi.wsgi.application'

# CORS_WHITELIST
CORS_ORIGIN_WHITELIST = [
    "http://localhost:3000",
    # "https://store-finder.netlify.app",
    "http://127.0.0.1:8000"
]

# CORS_ORIGIN_REGEX_WHITELIST = [
#     r"^https://\w+\.netlify\.apps$",
# ]

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'NON_FIELD_ERRORS_KEY': 'error',
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=1),
    'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=1),
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


LOCATION_FIELD = {
    'map.provider': 'google',
    'map.zoom': 13,

    'search.provider': 'google',
    'search.suffix': '',

    'provider.google.api': '//www.maps.google.com/maps/api/js?sensor=false',
    'provider.google.api_key': 'AIzaSyD8BYhSB_lQQeoTOl2B3tJxBK4bGdhn8C8',
    'provider.google.api_libraries': '',
    'provider.google.map.type': 'ROADMAP',
    
}


# LOCATION_FIELD_PATH = settings.STATIC_URL + 'location_field'

# LOCATION_FIELD = {
#     'map.provider': 'google',
#     'map.zoom': 13,

#     'search.provider': 'google',
#     'search.suffix': '',

#     # Google
#     'provider.google.api': '//maps.google.com/maps/api/js',
#     'provider.google.api_key': 'AIzaSyBOeWDPnnEtxkMF4zoLs1qwCUhP4Z2fhy0',
#     'provider.google.map_type': 'ROADMAP',

#     # Mapbox
#     'provider.mapbox.access_token': '',
#     'provider.mapbox.max_zoom': 18,
#     'provider.mapbox.id': 'mapbox.streets',

#     # OpenStreetMap
#     'provider.openstreetmap.max_zoom': 18,

#     # misc
#     'resources.root_path': LOCATION_FIELD_PATH,
#     'resources.media': {
#         'js': [
#             LOCATION_FIELD_PATH + '/js/form.js',
#         ],
#     },
# }